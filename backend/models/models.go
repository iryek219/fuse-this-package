package models

import "time"

// GithubRepo represents one Repo from github
type GithubRepo struct {
	Name            string          `json:"name"`
	FullName        string          `json:"full_name"`
	WatchersCount   int             `json:"watchers_count"`
	StargazersCount int             `json:"stargazers_count"`
	URL             string          `json:"url"`
	HTMLURL         string          `json:"html_url"`
	SearchScore     float64         `json:"score"`
	Description     string          `json:"description"`
	CreatedAt       time.Time       `json:"created_at"`
	UpdatedAt       time.Time       `json:"updated_at"`
	PushedAt        time.Time       `json:"pushed_at"`
	OpenIssues      int             `json:"open_issues_count"`
	Forks           int             `json:"forks_count"`
	Owner           GithubRepoOwner `json:"owner"`
}

// GithubRepoSearchResponse represents a Repo search response from github
type GithubRepoSearchResponse struct {
	TotalCount int          `json:"total_count"`
	Items      []GithubRepo `json:"items"`
}

// NpmRepo represents one Repo from github
// Generated by https://quicktype.io

type UnifiedRepo struct {
	Name        string    `json:"name"`
	FullName    string    `json:"full_name"`
	URL         string    `json:"url"`
	HTMLURL     string    `json:"html_url"`
	SearchScore float64   `json:"searchScore"`
	Description string    `json:"description"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	PushedAt    time.Time `json:"pushed_at"`
	OpenIssues  int       `json:"open_issues_count"`
	Forks       int       `json:"forks_count"`
}

// NpmRepoSearchResponse represents the search response object from npm
// Generated by https://quicktype.io

type NpmRepoSearchResponse struct {
	Objects []Object `json:"objects"`
	Total   int64    `json:"total"`
	Time    string   `json:"time"`
}

type Object struct {
	Package     Package `json:"package"`
	Score       Score   `json:"score"`
	SearchScore float64 `json:"searchScore"`
}

type NpmRepo struct {
	Name        string      `json:"name"`
	Version     string      `json:"version"`
	Description string      `json:"description"`
	Keywords    []string    `json:"keywords"`
	Date        string      `json:"date"`
	Links       Links       `json:"links"`
	Publisher   Publisher   `json:"publisher"`
	Maintainers []Publisher `json:"maintainers"`
}

type Package struct {
	Name        string      `json:"name"`
	Version     string      `json:"version"`
	Description string      `json:"description"`
	Keywords    []string    `json:"keywords"`
	Date        string      `json:"date"`
	Links       Links       `json:"links"`
	Publisher   Publisher   `json:"publisher"`
	Maintainers []Publisher `json:"maintainers"`
}

type Links struct {
	Npm        string `json:"npm"`
	Homepage   string `json:"homepage"`
	Repository string `json:"repository"`
	Bugs       string `json:"bugs"`
}

type Publisher struct {
	Username string `json:"username"`
	Email    string `json:"email"`
}

type Score struct {
	Final  float64 `json:"final"`
	Detail Detail  `json:"detail"`
}

type Detail struct {
	Quality     float64 `json:"quality"`
	Popularity  float64 `json:"popularity"`
	Maintenance float64 `json:"maintenance"`
}

// GithubRepoOwner represents a repo owner on github
type GithubRepoOwner struct {
	Login             string `json:"login"`
	ID                int64  `json:"id"`
	NodeID            string `json:"node_id"`
	AvatarURL         string `json:"avatar_url"`
	GravatarID        string `json:"gravatar_id"`
	URL               string `json:"url"`
	ReceivedEventsURL string `json:"received_events_url"`
	Type              string `json:"type"`
}

// NPMFilter npm search filters
type NPMFilter struct {
	Quality     float64
	Maintenance float64
	Popularity  float64
}

type RepoMergeResult struct {
	GithubRepo
	NpmURL   string  `json:"npm_url"`
	OurScore float64 `json:"our_score"`
}
